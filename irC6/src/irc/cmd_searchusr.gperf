
/* $Id: cmd_searchusr.gperf,v 1.1 2005/04/16 09:23:23 benkj Exp $ */

%{
/*
 * - irC6 -
 *
 * Copyright (c) 2003
 *	Leonardo Banchi		<benkj@antifork.org>.  
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * 
 */

#include "irc/searchusr.c"
%}
struct cmd_searchusr {
	char *name;
	void (*func)(connection_t *, int, char **);
	char *aiuto;
};
%%
aiuto,		NULL, "questo messaggio"
lista,		c_list, "lista argomenti"
ls,		c_list, "come lista"
email,		c_email, "ricerca per email"
mostra,		c_showconf, "mostra i parametri di ricerca correnti"
rifai,		c_reset, "cancella i parametri correnti"
cerca,		c_search, "cerca utenti usando i parametri correnti"
agg,		c_add, "aggiunti un utente alla lista"
%%

void
irc_searchusr_input(c, argc, argv)
    connection_t *c;
    int argc;
    char **argv;
{
	struct cmd_searchusr *cl;
	char *cmd;
	int i;

	if (argc  > 0) {
		cmd = (*argv[0] == ':') ? argv[0] + 1 : argv[0];
	
		if ((cl = irc_cmd_searchusr(cmd, strlen(cmd))) == NULL) {
			c_checkword(c, argc, argv);
			return;
		}

		if (cl->func == NULL) { /* aiuto */
			for (i = 0; i < TOTAL_KEYWORDS; i++)
				IRC_SEARCHMSG(c, "%s: %s", wordlist[i].name, 
	   				wordlist[i].aiuto);

			IRC_SEARCHMSG(c, "[campo] = [valore]: "
			    "per settare i parametri");
		} else 
			(*cl->func)(c, argc - 1, argv + 1);
	}
}
