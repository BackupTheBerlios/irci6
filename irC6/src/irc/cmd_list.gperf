
/* $Id: cmd_list.gperf,v 1.1 2005/04/16 09:23:23 benkj Exp $ */

%{
/*
 * - irC6 -
 *
 * Copyright (c) 2003
 *	Leonardo Banchi		<benkj@antifork.org>.  
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * 
 */

#include "irc/comandi.c"
#include "args_sep.h"
%}
struct cmd_list {
	char *name;
	void (*func)(connection_t *, int, char **, char *);
};
%%
PASS,		c_pass
NICK,		c_nick
USER,		c_user
PING,		c_ping
MODE,		c_mode
QUIT,		c_quit
SQUIT,		c_squit
PRIVMSG,	c_privmsg
ISON,		c_ison
JOIN,		c_join
PART,		c_part
WHO,		c_who
AWAY,		c_away
WHOIS,		c_whois
MAIL,		c_mail
LIST,		c_list
%%

void
irc_process_input(c, cmd, size)
    connection_t *c;
    char *cmd;
    size_t size;
{
	struct cmd_list *cl;
	char **argv;
	int argc;

	cmd[size] = '\0';

	PDEBUG("process input");

	args_sep(c->atmp, cmd, &argc, &argv);

	if (argc  > 0) {
		PDEBUG("process %s", argv[0]);

		if ((cl = irc_cmd_list(argv[0], strlen(argv[0]))) != NULL)
			(*cl->func)(c, argc - 1, argv + 1, cmd);
		else 
			IRC_SEND_UNKCMD(c, SERV, c->nick, argv[0]);
	}
}
